{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["tmp_6", 32, false],
        ["tmp_7", 32, false],
        ["tmp_8", 32, false],
        ["tmp_9", 32, false],
        ["tmp_10", 8, false],
        ["tmp_11", 16, false],
        ["tmp_12", 16, false],
        ["tmp_13", 32, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["tmp_16", 32, false],
        ["tx_util_0", 8, false],
        ["mpu_0", 8, false],
        ["up_time_0", 48, false],
        ["cond_0", 1, false],
        ["bh_temp_0", 9, false],
        ["flow_hash_0", 32, false],
        ["flow_t_0", 48, false],
        ["flow_h_0", 9, false],
        ["best_h_0", 9, false],
        ["tmp", 9, false],
        ["util_0", 8, false],
        ["last_update_0", 48, false],
        ["metadata.nxt_hop", 9, false],
        ["metadata.self_id", 32, false],
        ["metadata.dst_tor", 32, false],
        ["_padding_0", 2, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seq", 32, false],
        ["ack", 32, false],
        ["dataofs", 4, false],
        ["reserved", 3, false],
        ["flags", 9, false],
        ["window", 32, false],
        ["chksum", 16, false],
        ["urgptr", 16, false]
      ]
    },
    {
      "name" : "hula_t",
      "id" : 5,
      "fields" : [
        ["dst_tor", 24, false],
        ["path_util", 8, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 4,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "hula",
      "id" : 5,
      "header_type" : "hula_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x42",
              "mask" : null,
              "next_state" : "parse_hula"
            },
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_hula",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "hula"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 375,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "ipv4", "tcp", "hula"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.port_util",
      "id" : 0,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 147,
        "column" : 42,
        "source_fragment" : "port_util"
      },
      "size" : 255,
      "bitwidth" : 8
    },
    {
      "name" : "MyIngress.port_util_last_updated",
      "id" : 1,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 149,
        "column" : 42,
        "source_fragment" : "port_util_last_updated"
      },
      "size" : 255,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.update_time",
      "id" : 2,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 151,
        "column" : 41,
        "source_fragment" : "update_time"
      },
      "size" : 512,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.best_hop",
      "id" : 3,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 153,
        "column" : 44,
        "source_fragment" : "best_hop"
      },
      "size" : 512,
      "bitwidth" : 9
    },
    {
      "name" : "MyIngress.flowlet_time",
      "id" : 4,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 155,
        "column" : 37,
        "source_fragment" : "flowlet_time"
      },
      "size" : 1024,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.flowlet_hop",
      "id" : 5,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 157,
        "column" : 40,
        "source_fragment" : "flowlet_hop"
      },
      "size" : 1024,
      "bitwidth" : 9
    },
    {
      "name" : "MyIngress.min_path_util",
      "id" : 6,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 159,
        "column" : 41,
        "source_fragment" : "min_path_util"
      },
      "size" : 512,
      "bitwidth" : 8
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 353,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "MyIngress.drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 163,
            "column" : 7,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 163,
            "column" : 7,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 163,
            "column" : 7,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.hula_handle_probe",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 178,
            "column" : 32,
            "source_fragment" : "(bit<32>) standard_metadata.ingress_port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tx_util_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.port_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "port_util.read(tx_util, (bit<32>) standard_metadata.ingress_port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 179,
            "column" : 32,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "mpu_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.min_path_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "min_path_util.read(mpu, dst_tor)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 180,
            "column" : 34,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "up_time_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.update_time"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 180,
            "column" : 8,
            "source_fragment" : "update_time.read(up_time, dst_tor)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["hula", "path_util"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tx_util_0"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["hula", "path_util"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<",
                      "left" : {
                        "type" : "field",
                        "value" : ["hula", "path_util"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "tx_util_0"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "cond_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "or",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["hula", "path_util"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "mpu_0"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["scalars", "up_time_0"]
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000000000040"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "bool cond = (hdr.hula.path_util < mpu || curr_time - up_time > KEEP_ALIVE_THRESH);"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "mpu_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "path_util"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "mpu_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "or",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["hula", "path_util"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "mpu_0"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["scalars", "up_time_0"]
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000000000040"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 191,
            "column" : 8,
            "source_fragment" : "mpu ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 192,
            "column" : 28,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.min_path_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "mpu_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "min_path_util.write(dst_tor, mpu)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "up_time_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "up_time_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "cond_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 194,
            "column" : 8,
            "source_fragment" : "up_time ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 195,
            "column" : 26,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.update_time"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "up_time_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 195,
            "column" : 8,
            "source_fragment" : "update_time.write(dst_tor, up_time)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 198,
            "column" : 31,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bh_temp_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.best_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 198,
            "column" : 8,
            "source_fragment" : "best_hop.read(bh_temp, dst_tor)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bh_temp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "bh_temp_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "cond_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 199,
            "column" : 8,
            "source_fragment" : "bh_temp ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 200,
            "column" : 23,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.best_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "bh_temp_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 200,
            "column" : 8,
            "source_fragment" : "best_hop.write(dst_tor, bh_temp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["hula", "dst_tor"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 203,
            "column" : 32,
            "source_fragment" : "dst_tor"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "mpu_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.min_path_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 203,
            "column" : 8,
            "source_fragment" : "min_path_util.read(mpu, dst_tor)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["hula", "path_util"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "mpu_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 204,
            "column" : 8,
            "source_fragment" : "hdr.hula.path_util = mpu"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.hula_handle_data_packet",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 220,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 221,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 222,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 223,
            "column" : 12,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 224,
            "column" : 12,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000200"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "hash(flow_hash, HashAlgorithm.csum16, 32w0, { ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "flow_t_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flowlet_time"
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "flowlet_time.read(flow_t, flow_hash)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "best_h_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.best_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.dst_tor"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 230,
            "column" : 8,
            "source_fragment" : "best_hop.read(best_h, meta.dst_tor)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flowlet_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 232,
            "column" : 8,
            "source_fragment" : "flowlet_hop.read(tmp, flow_hash)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "best_h_0"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "flow_t_0"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000000000008"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 233,
            "column" : 8,
            "source_fragment" : "tmp ="
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.flowlet_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 234,
            "column" : 8,
            "source_fragment" : "flowlet_hop.write(flow_hash, tmp)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "flow_h_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flowlet_hop"
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 237,
            "column" : 8,
            "source_fragment" : "flowlet_hop.read(flow_h, flow_hash)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_h_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = flow_h"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.flowlet_time"
            },
            {
              "type" : "field",
              "value" : ["scalars", "flow_hash_0"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 239,
            "column" : 8,
            "source_fragment" : "flowlet_time.write(flow_hash, curr_time)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_dst_tor",
      "id" : 5,
      "runtime_data" : [
        {
          "name" : "dst_tor",
          "bitwidth" : 24
        },
        {
          "name" : "self_id",
          "bitwidth" : 24
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.dst_tor"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 0
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 261,
            "column" : 8,
            "source_fragment" : "meta.dst_tor = (bit<32>) dst_tor"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.self_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 1
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 262,
            "column" : 8,
            "source_fragment" : "meta.self_id = (bit<32>) self_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.dummy_dst_tor",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.dst_tor"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 267,
            "column" : 8,
            "source_fragment" : "meta.dst_tor = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.self_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 268,
            "column" : 8,
            "source_fragment" : "meta.self_id = 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.simple_forward",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 286,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.update_ingress_statistics",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 310,
            "column" : 27,
            "source_fragment" : "port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "util_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.port_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 310,
            "column" : 6,
            "source_fragment" : "port_util.read(util, port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 311,
            "column" : 47,
            "source_fragment" : "port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "last_update_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.port_util_last_updated"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 311,
            "column" : 6,
            "source_fragment" : "port_util_last_updated.read(last_update, port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "util_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<<",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["standard_metadata", "packet_length"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x000000ff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["scalars", "util_0"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x06"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["scalars", "last_update_0"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x0000000000ff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 314,
            "column" : 6,
            "source_fragment" : "util = (((bit<8>) standard_metadata.packet_length + util) << PROBE_FREQ_FACTOR) - delta_t"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "util_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">>",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "util_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x06"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 315,
            "column" : 6,
            "source_fragment" : "util = util >> PROBE_FREQ_FACTOR"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 317,
            "column" : 22,
            "source_fragment" : "port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.port_util"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "util_0"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 317,
            "column" : 6,
            "source_fragment" : "port_util.write(port, util)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 318,
            "column" : 35,
            "source_fragment" : "port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.port_util_last_updated"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 318,
            "column" : 6,
            "source_fragment" : "port_util_last_updated.write(port, curr_time)"
          }
        }
      ]
    },
    {
      "name" : "switch328",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 328,
            "column" : 12,
            "source_fragment" : "standard_metadata.mcast_grp = (bit<16>)standard_metadata.ingress_port"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 140,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "tbl_drop",
      "tables" : [
        {
          "name" : "tbl_drop",
          "id" : 0,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 322,
            "column" : 8,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : "MyIngress.get_dst_tor",
          "next_tables" : {
            "MyIngress.drop" : "MyIngress.get_dst_tor"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.get_dst_tor",
          "id" : 1,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 271,
            "column" : 10,
            "source_fragment" : "get_dst_tor"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 6],
          "actions" : ["MyIngress.set_dst_tor", "MyIngress.dummy_dst_tor"],
          "base_default_next" : "tbl_update_ingress_statistics",
          "next_tables" : {
            "MyIngress.set_dst_tor" : "tbl_update_ingress_statistics",
            "MyIngress.dummy_dst_tor" : "tbl_update_ingress_statistics"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_update_ingress_statistics",
          "id" : 2,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 324,
            "column" : 8,
            "source_fragment" : "update_ingress_statistics()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["MyIngress.update_ingress_statistics"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "MyIngress.update_ingress_statistics" : "node_5"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.hula_logic",
          "id" : 3,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 242,
            "column" : 10,
            "source_fragment" : "hula_logic"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.protocol",
              "target" : ["ipv4", "protocol"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 4,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3, 4, 0],
          "actions" : ["MyIngress.hula_handle_probe", "MyIngress.hula_handle_data_packet", "MyIngress.drop"],
          "base_default_next" : "node_7",
          "next_tables" : {
            "MyIngress.hula_handle_probe" : "node_7",
            "MyIngress.hula_handle_data_packet" : "node_7",
            "MyIngress.drop" : "node_7"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_switch328",
          "id" : 4,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 328,
            "column" : 40,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["switch328"],
          "base_default_next" : "node_9",
          "next_tables" : {
            "switch328" : "node_9"
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.edge_forward",
          "id" : 5,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 289,
            "column" : 10,
            "source_fragment" : "edge_forward"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 4,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 1],
          "actions" : ["MyIngress.simple_forward", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.simple_forward" : null,
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_5",
          "id" : 0,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 325,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.hula_logic"
        },
        {
          "name" : "node_7",
          "id" : 1,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 327,
            "column" : 14,
            "source_fragment" : "hdr.hula.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["hula", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_switch328",
          "false_next" : "node_9"
        },
        {
          "name" : "node_9",
          "id" : 2,
          "source_info" : {
            "filename" : "switch.p4",
            "line" : 330,
            "column" : 14,
            "source_fragment" : "meta.dst_tor == meta.self_id"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.dst_tor"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "metadata.self_id"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.edge_forward"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 341,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "switch.p4",
        "line" : 353,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_0",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "switch.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}